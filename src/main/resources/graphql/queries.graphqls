# Root Query is always required
type Query{
    greeting: String
    greetingWithArgument(name : String): String
    recentPosts: [Post]!
}

# ! means non nullable

type Post {
    id: ID!
    title: String!
    text: String!
    category: String
    author: Author!
    comments: [Comment]
}

type Author {
    id: ID!
    name: String!
    thumbnail: String
    posts: [Post]!
}

# for batch operations to handle n+1 case calls

type Comment {
    id: ID,
    text: String
    likes: ID
    dislikes: ID
    shareUrl: String
    post: Post
}

type Mutation{
    addPost(title: String, text: String, category: String): Post
}